{"version":3,"file":"app.c1b0c3a5.bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/common/constants.js","webpack:///./src/components/Conditions.js","webpack:///./src/components/DailyWeather.js","webpack:///./src/components/HourlyWeather.js","webpack:///./src/components/Location.js","webpack:///./src/components/Temperature.js","webpack:///./src/components/WeatherIcon.js","webpack:///./src/components/WeatherWidget.js","webpack:///./src/components/index.js","webpack:///./src/components/styles/Conditions.scss?f306","webpack:///./src/components/styles/DailyWeather.scss?0e36","webpack:///./src/components/styles/Location.scss?7db4","webpack:///./src/components/styles/Temperature.scss?4e52","webpack:///./src/components/styles/WeatherIcon.scss?3516","webpack:///./src/components/styles/WeatherWidget.scss?d14c","webpack:///./src/container/AppWrapper/AppWrapper.js","webpack:///./src/container/AppWrapper/AppWrappers.scss?5a4e","webpack:///./src/index.js","webpack:///./src/services/geoLocation.js","webpack:///./src/services/weather.js","webpack:///./src/utils/temperature.js"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors~app\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const scales = {celsius: 'C', fahrenheit: 'F'};\n","import './styles/Conditions.scss';\n\nimport PropTypes from 'prop-types';\n\nconst Conditions = ({weather}) => (\n  <div className='conditions-container'>\n    {/* <p>Precipitation: {weather.current.}</p> Didn't find this data point */}\n    <p>Humidity: {weather.current.humidity}%</p>\n    <p>Wind: {weather.current.wind_speed} mph</p>\n  </div>\n);\n\nConditions.propTypes = {\n  weather: PropTypes.shape({\n    current: PropTypes.shape({\n      humidity: PropTypes.number,\n      wind_speed: PropTypes.number\n    })\n  })\n};\n\nexport default Conditions;\n","import './styles/DailyWeather.scss';\n\nimport PropTypes from 'prop-types';\nimport {WeatherIcon} from '.';\nimport {kelvin2CAndF} from '../utils/temperature';\nimport {days} from '../common/constants';\n\nconst DailyWeather = ({weather, currentScale}) => {\n  const type = weather.weather[0].main;\n  const {max, min} = weather.temp;\n  const day = new Date(weather.dt * 1000).getDay();\n  const dayMax = kelvin2CAndF(max)[currentScale[0]];\n  const dayMin = kelvin2CAndF(min)[currentScale[0]];\n  return (\n    <div\n      className='daily-weather-container'\n      aria-label={`Weather will be ${type} on ${day} with maximum temperature of ${dayMax} and minimum of ${dayMin}.`}>\n      <p>{days[day]}</p>\n      <WeatherIcon type={type} />\n      <div>\n        {dayMax}° {dayMin}°\n      </div>\n    </div>\n  );\n};\n\nDailyWeather.propTypes = {\n  currentScale: PropTypes.array,\n  weather: PropTypes.shape({\n    dt: PropTypes.number,\n    temp: PropTypes.shape({\n      max: PropTypes.number,\n      min: PropTypes.number\n    }),\n    weather: PropTypes.array\n  })\n};\n\nexport default DailyWeather;\n","const HourlyWeather = () => null;\n\nexport default HourlyWeather;\n","import './styles/Location.scss';\n\nimport PropTypes from 'prop-types';\nimport {days} from '../common/constants';\n\nconst Location = ({location, weather}) => {\n  const {postcode, state_code, town, county} = location;\n  const date = new Date();\n  const day = date.getDay();\n  const hour = date.getHours();\n  const currentMeridian = hour >= 12 ? 'PM' : 'AM';\n  const hr = hour > 12 ? hour - 12 : hour;\n  const currentWeather = weather.current.weather[0].main;\n\n  return (\n    <div>\n      <div className='location-address location-color'>\n        {town || county}, {state_code} {postcode}\n      </div>\n      <div className='location-time location-color'>\n        {days[day]} {hr || 12}:00 {currentMeridian}\n      </div>\n      <div\n        aria-label={`Current weather is ${currentWeather}`}\n        className='location-weather location-color'>\n        {currentWeather}\n      </div>\n    </div>\n  );\n};\n\nLocation.propTypes = {\n  location: PropTypes.shape({\n    country: PropTypes.string,\n    county: PropTypes.string,\n    postcode: PropTypes.string,\n    state_code: PropTypes.string,\n    town: PropTypes.string\n  }),\n  weather: PropTypes.shape({\n    current: PropTypes.shape({\n      weather: PropTypes.array\n    })\n  })\n}\n\nexport default Location;\n","import PropTypes from 'prop-types';\nimport './styles/Temperature.scss';\nimport {kelvin2CAndF} from '../utils/temperature';\nimport {scales} from '../common/constants';\n\nconst Temperature = ({temp, onClickScale, currentScale}) => {\n  if (!temp) {\n    return null;\n  }\n  const {[scales.celsius]: inC, [[scales.fahrenheit]]: inF} = kelvin2CAndF(temp);\n\n  function linkOrText(scale) {\n    if (scale !== currentScale[0]) {\n      return (\n        <a\n          aria-label={`Switch to ${\n            currentScale[0] !== scales.celsius ? 'celsius' : 'fahrenheit'\n          } scale.`}\n          role='button'\n          href='/'\n          onClick={onClickScale}>\n          °{scale}\n        </a>\n      );\n    } else {\n      return <div>°{scale}</div>;\n    }\n  }\n\n  return (\n    <div className='temp-container'>\n      <div className='temp-number'>\n        {Math.floor(currentScale[0] === scales.celsius ? inC : inF)}\n      </div>\n      <div className='temp-scale'>\n        <div>{linkOrText(scales.celsius)}</div>\n        <div className='temp-divider'>|</div>\n        <div>{linkOrText(scales.fahrenheit)}</div>\n      </div>\n    </div>\n  );\n};\n\nTemperature.propTypes = {\n  currentScale: PropTypes.array,\n  onClickScale: PropTypes.func,\n  temp: PropTypes.number\n};\n\nexport default Temperature;\n","import './styles/WeatherIcon.scss';\n\nimport PropTypes from 'prop-types';\n\nconst WeatherIcon = ({type}) => {\n  // Didn't find documentation for possible types.\n  const possibleWeathers = new Set(['clouds', 'clear', 'snow', 'rain']);\n  let currentWeather = 'clear';\n  if (possibleWeathers.has(type.toLowerCase())) {\n    currentWeather = type.toLowerCase();\n  }\n\n  return (\n    <img\n      className='weather-icon'\n      src={`/assets/images/${currentWeather}.png`}\n      alt={currentWeather}\n    />\n  );\n};\n\nWeatherIcon.propTypes = {\n  type: PropTypes.string\n};\n\nexport default WeatherIcon;\n","import './styles/WeatherWidget.scss';\nimport PropTypes from 'prop-types';\nimport {useState, useCallback} from 'react';\n\nimport {DailyWeather, HourlyWeather, Location, Conditions, Temperature, WeatherIcon} from './';\nimport {scales} from '../common/constants';\n\nconst WeatherWidget = ({location, weather}) => {\n  const [currentScale, setScale] = useState([scales.celsius, scales.fahrenheit]);\n\n  const onClickScale = useCallback(\n    e => {\n      e.preventDefault();\n      setScale([currentScale[1], currentScale[0]]);\n    },\n    [currentScale]\n  );\n\n  return (\n    <div className='weather-widget' role='region'>\n      <Location location={location} weather={weather} />\n      <div className='weather-widget-weather-conditions'>\n        <div>\n          <div className='weather-widget-current-weather'>\n            <div className='weather-widget-icon'>\n              <WeatherIcon type={weather.current.weather[0].main} />\n            </div>\n            <Temperature\n              temp={weather.current.temp}\n              onClickScale={onClickScale}\n              currentScale={currentScale}\n            />\n          </div>\n        </div>\n        <div className='weather-widget-conditions'>\n          <Conditions weather={weather} />\n        </div>\n      </div>\n      <HourlyWeather />\n      <div className='weather-widget-daily-weather'>\n        {weather.daily.map(day => (\n          <DailyWeather currentScale={currentScale} weather={day} key={day.dt} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nWeatherWidget.propTypes = {\n  location: PropTypes.object,\n  weather: PropTypes.shape({\n    current: PropTypes.shape({\n      temp: PropTypes.number,\n      weather: PropTypes.array\n    }),\n    daily: PropTypes.array\n  })\n};\n\nexport default WeatherWidget;\n","export {default as DailyWeather} from './DailyWeather';\nexport {default as HourlyWeather} from './HourlyWeather';\nexport {default as Location} from './Location';\nexport {default as Conditions} from './Conditions';\nexport {default as Temperature} from './Temperature';\nexport {default as WeatherIcon} from './WeatherIcon';\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import './AppWrappers.scss';\n\nimport {useEffect, useState} from 'react';\nimport WeatherWidget from '../../components/WeatherWidget';\nimport {getGeoLocation, geoCoding} from '../../services/geoLocation';\nimport {getCurrentWeather} from '../../services/weather';\n\nconst AppWrapper = () => {\n  const [currentCoordinates, setCurrentCoordinates] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [hottestWeather, setHottestWeather] = useState(null);\n  const [hottestLocation, setHottestLocation] = useState(null);\n\n  useEffect(() => {\n    getGeoLocation()\n      .then(location => ({\n        lat: location.coords.latitude,\n        long: location.coords.longitude\n      }))\n      .then(location => setCurrentCoordinates(location));\n  }, []);\n\n  useEffect(() => {\n    if (currentCoordinates) {\n      geoCoding(currentCoordinates).then(location => {\n        setCurrentLocation(location);\n      });\n    }\n  }, [currentCoordinates]);\n\n  useEffect(() => {\n    if (currentCoordinates) {\n      getCurrentWeather(currentCoordinates).then(weather => setCurrentWeather(weather));\n    }\n  }, [currentCoordinates]);\n\n  useEffect(() => {\n    geoCoding({lat: 62.8657307, long: -154.7453284}).then(location => {\n      setHottestLocation(location);\n    });\n  }, []);\n\n  useEffect(() => {\n    getCurrentWeather({lat: 62.8657307, long: -154.7453284}).then(weather =>\n      setHottestWeather(weather)\n    );\n  }, []);\n\n  if (!currentLocation || !currentWeather) {\n    return (\n      <div\n        role='progressbar'\n        aria-valuemin={0}\n        aria-valuemax={100}\n        aria-valuenow={50}\n        aria-valuetext='Loading content...'\n        className='cs-loader-container'\n        aria-labelledby='spinner'\n        data-testid='cs-loader-component'>\n        <div className='loading' id='spinner'>\n          Loading...\n        </div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <WeatherWidget weather={currentWeather} location={currentLocation} />\n      <div style={{marginTop: '24px'}}>\n        <WeatherWidget weather={hottestWeather} location={hottestLocation} />\n      </div>\n    </>\n  );\n};\n\nexport default AppWrapper;\n","// extracted by mini-css-extract-plugin\nexport {};","import * as React from 'react';\nimport {render} from 'react-dom';\nimport AppWrapper from './container/AppWrapper/AppWrapper';\n\n/**\n * element in HTML document for React SPA\n * @type {ReactElement}\n */\nconst rootElement = document.getElementById('app');\n\n/**\n * React SPA\n * @type {ReactElement}\n */\nconst rootComponent = <AppWrapper />;\n\nrender(rootComponent, rootElement);\n","export function getGeoLocation() {\n  return new Promise((resolve, reject) =>\n    navigator.geolocation.getCurrentPosition(resolve, reject, {\n      maximumAge: 60000,\n      timeout: 5000,\n      enableHighAccuracy: true\n    })\n  );\n}\n\nexport function geoCoding({lat, long}) {\n  if (!lat || !long) {\n    return null;\n  }\n  const vendorURL = 'https://api.opencagedata.com/geocode/v1/json';\n  const apiKey = '0264db5477fe4b1c9ee9ae23b3ec59e5';\n  return fetch(`${vendorURL}?q=${lat},${long}&key=${apiKey}`)\n    .then(response => response.json())\n    .then(({results: [result]}) => result.components);\n}\n","export function getCurrentWeather({lat, long}) {\n  if (!lat || !long) {\n    return null;\n  }\n  const vendorURL = 'https://api.openweathermap.org/data/2.5/onecall';\n  const apiKey = '524589f12ff60e2a150e470595208862';\n  return fetch(`${vendorURL}?lat=${lat}&lon=${long}&appid=${apiKey}`).then(response =>\n    response.json()\n  );\n}\n","import {scales} from '../common/constants';\n\nexport function kelvin2CAndF(temp, {floor} = {floor: true}) {\n  if (!temp) {\n    return 273;\n  }\n  const fahrenheit = (temp - 273.15) * 1.8 + 32;\n  const celsius = temp - 273.15;\n  return {\n    [scales.fahrenheit]: floor ? Math.floor(fahrenheit) : fahrenheit,\n    [scales.celsius]: floor ? Math.floor(celsius) : celsius\n  };\n}\n"],"mappingsvJA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AASA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAFA;AAYA;;;;;;;;;;;;ACtCA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AADA;AADA;AARA;AAeA;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AAGA;AACA;AACA;AANA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAHA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;ACjDA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AACA;AAHA;AAJA;AADA;AAYA;AAAA;AACA;AAAA;AADA;AAbA;AAkBA;AAAA;AAEA;AAAA;AAAA;AAFA;AApBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAFA;AAWA;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAEA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AAAA;AAAA;AAAA;AATA;AAcA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AACA;;;;;;;;;;;;AC5EA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;A","sourceRoot":""}